ARG EE_BASE_IMAGE=registry.redhat.io/ansible-automation-platform-22/ee-minimal-rhel8:latest
ARG EE_BUILDER_IMAGE=registry.redhat.io/ansible-automation-platform-22/ansible-builder-rhel8:latest
 

FROM $EE_BASE_IMAGE as galaxy
ARG ANSIBLE_GALAXY_CLI_COLLECTION_OPTS=-v
USER root

{% if use_proxy %}
ENV http_proxy={{ http_proxy }}
ENV https_proxy={{ https_proxy }}
ENV no_proxy={{ no_proxy }}
{% endif %}

ADD _build/ansible.cfg ~/.ansible.cfg
ADD _build /build
WORKDIR /build

RUN ansible-galaxy role install -r requirements.yml --roles-path "/usr/share/ansible/roles"

RUN ANSIBLE_GALAXY_DISABLE_GPG_VERIFY=1 ansible-galaxy collection install $ANSIBLE_GALAXY_CLI_COLLECTION_OPTS -r requirements.yml --collections-path "/usr/share/ansible/collections"

FROM $EE_BUILDER_IMAGE as builder

{% if use_proxy %}
ENV http_proxy={{ http_proxy }}
ENV https_proxy={{ https_proxy }}
ENV no_proxy={{ no_proxy }}
{% endif %}

COPY --from=galaxy /usr/share/ansible /usr/share/ansible

{% if python_packages is defined and (python_packages|length )%}
ADD _build/requirements.txt requirements.txt
{% endif %}

{% if bindeps is defined and (bindeps|length )%}
ADD _build/bindep.txt bindep.txt
{% endif %}

RUN ansible-builder introspect --sanitize {% if python_packages is defined and (python_packages|length )%}--user-pip=requirements.txt{% endif %} {% if bindeps is defined and (bindeps|length )%}--user-bindep=bindep.txt{% endif %} --write-bindep=/tmp/src/bindep.txt --write-pip=/tmp/src/requirements.txt

RUN assemble

FROM $EE_BASE_IMAGE
USER root

{% if use_proxy %}
ENV http_proxy={{ http_proxy }}
ENV https_proxy={{ https_proxy }}
ENV no_proxy={{ no_proxy }}
{% endif %}

COPY --from=galaxy /usr/share/ansible /usr/share/ansible

COPY --from=builder /output/ /output/

RUN /output/install-from-bindep && rm -rf /output/wheels


